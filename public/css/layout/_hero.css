/* Hero Section */
.hero {
    text-align: center;
    padding: 150px 0;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInSlideUp 1s forwards 0.5s; /* Плавное появление */
    background: transparent;
}

.hero-content {
    max-width: 800px;
    margin: 0 auto;
}

.hero-title {
    font-size: 3.5em;
    margin-top: 180px;
    font-family: MainFontBold, sans-serif;
    margin-bottom: 20px;
    color: var(--accent-lighter); /* Используем переменную для акцентного цвета */
    text-shadow: var(--text-shadow-accent-light); /* Используем переменную для тени */
}

.neon-text {
    color: var(--accent-main); /* Используем переменную для акцентного цвета */
    text-shadow: 0 0 20px var(--accent-main); /* Используем переменную для акцентного цвета */
}

.hero-subtitle {
    font-size: 1.4em;
    font-family: MainFont, sans-serif;
    margin-bottom: -10px;
    margin-top: 15px;
    font-weight: 350;
    color: rgba(255, 255, 255, 0.5); /* Можно оставить как есть или сделать переменную с прозрачностью */
    text-shadow: 0 0 5px rgba(170, 170, 170, 0.5); /* Можно оставить как есть или сделать переменную с прозрачностью */
}

.cta-button {
    backdrop-filter: var(--backdrop-blur-button); /* Используем переменную для размытия кнопки */
    -webkit-backdrop-filter: var(--backdrop-blur-button);
    background-color: var(--button-primary-bg); /* Используем переменную для фона кнопки */
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.125); /* Можно оставить как есть или сделать переменную с прозрачностью */
    color: var(--primary-background); /* Используем переменную для черного */
    padding: 18px 40px;
    font-size: 1.3em;
    cursor: pointer;
    box-shadow: var(--box-shadow-button-inset); /* Используем переменную для тени */
    filter: var(--drop-shadow-button); /* Используем переменную для тени */
    outline: none; /* Убираем стандартное выделение при фокусе */
    position: relative;
    overflow: hidden;
    display: inline-flex;
    align-items: center;
    margin-top: 50px;
    justify-content: center;
    gap: 10px;
    transition: all 0.3s ease-in-out;
}

.cta-button:active {
    background-color: rgba(177, 200, 250, 0.9); /* Можно оставить как есть или сделать переменную с прозрачностью */
    opacity: 0.5;
}

.cta-button i {
    font-size: 1.1em;
}

.cta-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gradient-button-shine); /* Используем переменную для градиента блеска */
    transform: translateX(-100%);
    transition: transform 0.5s ease-in-out;
}

.cta-button:hover::before {
    transform: translateX(100%);
}

.cta-button:hover {
    scale: 1.05;
    filter: var(--drop-shadow-button-hover) ; /* Используем переменную для тени при наведении */
}

.my-button {
    padding: 25px 40px;
    background: none;
    border: none;
    background-image: url('Button.png'); /* Фиолетовый градиент */
    background-size: contain;
    outline: none;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 1150px;
    filter: var(--drop-shadow-image-button) ; /* Используем переменную для тени */
    -webkit-filter: var(--drop-shadow-image-button);
    -moz-filter: var(--drop-shadow-image-button);
    color: var(--primary-text); /* Используем переменную для белого */
    font-size: 18px;
    cursor: pointer;
    opacity: 0.7;
    position: relative;
    margin-top: 40px;
    transition: all 1s;
    overflow: hidden; /* Чтобы псевдоэлемент не выходил за границы */
}

#spectralCanvas {
    position: fixed;
    filter: brightness(20%);
    -webkit-filter: brightness(20%);
    -moz-filter: brightness(20%);
    top: 0;
    left: 0;
    width: 100vw;
    background-color: rgba(0, 0, 0, 0.5);
    height: 100vh;
    z-index: -1;
    transition: opacity 1s ease;
}

.my-button:hover {
    filter: var(--drop-shadow-image-button-hover) ; /* Используем переменную для тени при наведении */
    -webkit-filter: var(--drop-shadow-image-button-hover);
    -moz-filter: var(--drop-shadow-image-button-hover);
    opacity: 1;
    scale: 1.1;
}

@keyframes fadeInSlideUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
